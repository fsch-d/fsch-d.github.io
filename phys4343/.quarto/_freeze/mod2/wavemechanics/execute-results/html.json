{
  "hash": "e8460b9abac633c0754681e6c1305bd0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nauthor: Daniel Fischer\njupyter: python3\ntitle: Wave Mechanics\n---\n\n\n\n\n## Matter waves\n\nParticles exhibit wave-like behavior (e.g., diffraction). The momentum/wave vector and energy/frequency relations (de Broglie) are:\n\n$$\n\\vec{p} = \\hbar \\vec{k} \\quad \\text{and} \\quad E = \\hbar \\omega\n$$\n\n## Time evolution\n\nThe particle wave function $\\psi$ follows the time-dependent Schrödinger Equation (SE):\n\n$$\ni \\hbar \\frac{\\partial}{\\partial t} \\psi(\\vec{r},t) = \\hat{H} \\psi(\\vec{r},t), \\quad\n\\hat{H} = -\\frac{\\hbar^2}{2m}\\nabla^2 + V(\\vec{r},t)\n$$\n\n## Time-independent SE\n\nFor a potential without explicit time dependence $V(\\vec{r},t)=V(\\vec{r})$ and a well-defined energy $E = \\hbar \\omega$, the wave function can be written as $\\psi(\\vec{r},t) = \\phi(\\vec{r}) e^{i\\omega t}$ with $\\phi(\\vec{r})$ following the time-independent SE:\n\n$$\n\\hat{H}\\phi(\\vec{r}) = E \\phi(\\vec{r})\n$$\n\n## Probability density (Born rule)\n\nThe wave function is related to the particle’s probability density $P(\\vec{r},t)$ (i.e., the probability of finding the particle at position $\\vec{r}$) following the Born rule:\n\n$$\nP(\\vec{r},t) = |\\psi(\\vec{r},t)|^2\n$$\n\n> (Note: This requires the wave function to be normalized, i.e., $\\int |\\psi(\\vec{r},t)|^2 d^3r = 1$. However, not all wave functions can be normalized, e.g., 'plane waves'.)\n\n## Expectation value of position\n\nThis is the average position of the particle when many identical measurements are performed, and it is given by:\n\n$$\n\\langle \\vec{r} \\rangle = \\int \\psi^*(\\vec{r},t) \\, \\vec{r} \\, \\psi(\\vec{r},t) \\, d^3r\n$$\n\n## Variance of position\n\nThe variance of the position $\\vec{r}$ quantifies the spread of the probability distribution, i.e., it expresses the uncertainty in the particle’s position:\n\n$$\n\\mathrm{Var}(\\vec{r}) = \\langle \\vec{r}^2 \\rangle - \\langle \\vec{r} \\rangle^2,\n\\quad \\text{with} \\quad\n\\langle \\vec{r}^2 \\rangle = \\int \\psi^*(\\vec{r},t) \\, \\vec{r}^2 \\, \\psi(\\vec{r},t) \\, d^3r\n$$\n\n## Wave function in momentum space\n\nA wave function in coordinate space $\\psi(\\vec{r})$ has a corresponding wave function in momentum space $\\Psi(\\vec{k})$, and they are related by a Fourier transform (for one particle in three-dimensional space):\n\n$$\n\\Psi(\\vec{k}) = \\frac{1}{(2\\pi)^{3/2}} \\int d^3r \\, \\psi(\\vec{r}) e^{-i\\vec{k}\\cdot \\vec{r}}, \\quad\n\\psi(\\vec{r}) = \\frac{1}{(2\\pi)^{3/2}} \\int d^3k \\, \\Psi(\\vec{k}) e^{i\\vec{k}\\cdot \\vec{r}}\n$$\n\n\n---\n\n::: {.content-visible when-format=\"pdf\"}\n```{=latex}\n\\clearpage\n```\n:::\n\n## EXAMPLE 1: Measurement outcomes and probability distributions\n\n::: {#cell-fig-measurement .cell fig-format='svg' execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\n\nx = np.linspace(-6,6,400)\nlarge_var = norm.pdf(x, 0, 2)\nsmall_var = norm.pdf(x, 0, 0.6)\nnp.random.seed(0)\nmeasurements_wide = np.random.normal(0, 2, 10)\nmeasurements_narrow = np.random.normal(0, 0.6, 10)\nplt.figure(figsize=(10,5))\nplt.fill_between(x, 0, 2.2, where=(x>=-2) & (x<=2), color='red', alpha=0.1)\nplt.fill_between(x, 0, 2.2, where=(x>=-0.6) & (x<=0.6), color='blue', alpha=0.1)\nplt.plot(x, large_var*2.5, 'r--', label='Large variance distribution')\nplt.plot(x, small_var*2.5, 'b-', label='Small variance distribution')\nplt.scatter(measurements_wide, [0.3]*10, color='red', marker='^', s=50, alpha=0.7, label='Measurements (wide)')\nplt.scatter(measurements_narrow, [0.6]*10, color='blue', s=20, alpha=0.7, label='Measurements (narrow)')\nplt.axvline(0, color='black', linestyle='--', linewidth=2, label='Expectation value <x>')\nplt.xlabel('Measurement outcome x')\nplt.ylabel('Probability density / outcomes')\nplt.legend(loc='upper left')\nplt.grid(False)\n```\n\n::: {.cell-output .cell-output-display}\n![Measurement outcomes and probability distributions for small (blue) and large (red) variance. Shaded bands show ±σ around the expectation value <x>.](wavemechanics_files/figure-html/fig-measurement-output-1.png){#fig-measurement width=812 height=429 fig-alt='Red broad and blue narrow Gaussians with markers, shaded ±σ bands, and dashed line at x=0.'}\n:::\n:::\n\n\n::: {.content-visible when-format=\"pdf\"}\n```{=latex}\n\\clearpage\n```\n:::\n\n## EXAMPLE 2: Free 1D Electron: Plane Wave Solution\n\nThe time-dependent Schrödinger equation for a free particle in 1D:\n\n$$\ni \\hbar \\frac{\\partial \\psi}{\\partial t} = -\\frac{\\hbar^2}{2m} \\frac{\\partial^2 \\psi}{\\partial x^2}\n$$\n\nPlane wave solution:\n\n$$\n\\psi(x,t) = e^{i(kx - \\omega t)}, \\quad \\omega = \\frac{\\hbar k^2}{2m}\n$$\n\n- **Solution:** plane wave with constant amplitude\n- **Momentum:** well-defined, $p = \\hbar k$\n- **Normalizability:** Not normalizable, so not physical by itself\n\n::: {#cell-fig-wave .cell fig-format='svg' execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 400)\ny = np.cos(2*np.pi*0.8*x - 0.5)\n\nplt.figure(figsize=(8,4))\nplt.plot(x, y, color='blue', linewidth=2)\nplt.xlabel('x')\nplt.ylabel('Re[ψ(x,t)]')\nplt.ylim(-2,2)\nplt.grid(False)\n```\n\n::: {.cell-output .cell-output-display}\n![Plane wave solution: real part of the wave function for a free 1D electron](wavemechanics_files/figure-html/fig-wave-output-1.png){#fig-wave width=675 height=361 fig-alt='Cosine wave showing the oscillatory behavior of a free electron plane wave in one dimension.'}\n:::\n:::\n\n\n::: {.content-visible when-format=\"pdf\"}\n```{=latex}\n\\newpage\n```\n:::\n\n## EXAMPLE 3: Gaussian Wavepacket in 1D\n\nInitial wavepacket:\n\n$$\n\\psi(x,0) = e^{-x^2/(2\\sigma^2)} e^{i k_0 x}\n$$\n\nTime evolution:\n\n$$\n\\psi(x,t) \\sim e^{-(x - \\hbar k_0 t / m)^2 / (2 \\sigma_t^2)} e^{i(k_0 x - \\omega t)}, \\quad\n\\sigma_t = \\sigma \\sqrt{1 + \\left(\\frac{\\hbar t}{m \\sigma^2}\\right)^2}\n$$\n\n- **Localized wavepacket** (superposition of plane waves)\n- **Moves with group velocity** $v_g = \\hbar k_0/m$\n- **Spreads in time** due to dispersion\n- **Physical:** normalizable and finite probability\n\n::: {#cell-fig-wavepacket .cell fig-format='svg' execution_count=3}\n``` {.python .cell-code}\nx = np.linspace(-8, 8, 400)\npsi0 = np.exp(-x**2/2)\npsi_t = np.exp(-(x-2)**2/4)\nplt.figure(figsize=(8,4))\nplt.plot(x, psi0, color='red', linewidth=2, label='t=0')\nplt.plot(x, psi_t, color='blue', linewidth=2, label='t>0')\nplt.xlabel('x')\nplt.ylabel('|ψ(x,t)|²')\nplt.legend()\nplt.grid(False)\n```\n\n::: {.cell-output .cell-output-display}\n![Gaussian wavepacket evolution: initial (red) and later (blue) distributions](wavemechanics_files/figure-html/fig-wavepacket-output-1.png){#fig-wavepacket width=664 height=356 fig-alt='Two Gaussian curves: narrow red at center and broader blue shifted right, showing spreading.'}\n:::\n:::\n\n\n## Additional notes:\n\n- Analytic solutions exist only for very simple systems. More particles require approximations or numerical methods.\n- Electromagnetic interactions are relativistic; a full description uses quantum electrodynamics (QED).\n- Some quantum properties (e.g., spin) cannot be described by wave functions alone, but the general Schrödinger equation $\\hat{H}\\psi=i\\hbar \\partial_t \\psi$ still governs time evolution.\n\n",
    "supporting": [
      "wavemechanics_files"
    ],
    "filters": [],
    "includes": {}
  }
}